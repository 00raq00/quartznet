<h1>Lesson 8: SchedulerListeners</h1>
<br />
<p>
SchedulerListeners are much like ITriggerListeners and IJobListeners, except they receive notification of 
events within the scheduler itself - not necessarily events related to a specific trigger or job.
</p>
<p>
Scheduler-related events include: the addition of a job/trigger, the removal of a job/trigger, a serious error 
within the scheduler, notification of the scheduler being shutdown, and others.
</p>

<strong>The ISchedulerListener Interface</strong>

<div class='code'>
<font color='blue'>public&nbsp;interface&nbsp;</font><font color='black'>ISchedulerListener<br />
{<br />
&nbsp;&nbsp;&nbsp;&nbsp;</font><font color='blue'>void&nbsp;</font><font color='black'>JobScheduled(Trigger&nbsp;trigger)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>JobUnscheduled(</font><font color='blue'>string&nbsp;</font><font color='black'>triggerName,&nbsp;</font><font color='blue'>string&nbsp;</font><font color='black'>triggerGroup)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>TriggerFinalized(Trigger&nbsp;trigger)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>TriggersPaused(</font><font color='blue'>string&nbsp;</font><font color='black'>triggerName,&nbsp;</font><font color='blue'>string&nbsp;</font><font color='black'>triggerGroup)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>TriggersResumed(</font><font color='blue'>string&nbsp;</font><font color='black'>triggerName,&nbsp;</font><font color='blue'>string&nbsp;</font><font color='black'>triggerGroup)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>JobsPaused(</font><font color='blue'>string&nbsp;</font><font color='black'>jobName,&nbsp;</font><font color='blue'>string&nbsp;</font><font color='black'>jobGroup)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>JobsResumed(</font><font color='blue'>string&nbsp;</font><font color='black'>jobName,&nbsp;</font><font color='blue'>string&nbsp;</font><font color='black'>jobGroup)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>SchedulerError(</font><font color='blue'>string&nbsp;</font><font color='black'>msg,&nbsp;SchedulerException&nbsp;cause)</font><font color='blue'>;<br />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;</font><font color='black'>SchedulerShutdown()</font><font color='blue'>;<br />
</font><font color='black'>}</font>
	</div>

<p>
ISchedulerListener instances are created and registered in much the same way as the other listener types, 
except there is no distinction between global and non-global listeners. Scheduler listeners can be 
virtually any object that implements the ISchedulerListener interface.
</p>

<p>
<a href="tutorial_lesson_7.html">&laquo; Lesson 7</a> | <a href="tutorial_lesson_9.html">Lesson 9 &raquo;</a>  
</p>