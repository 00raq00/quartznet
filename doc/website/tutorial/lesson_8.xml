<?xml version="1.0"?>
<document>
<properties>
    <title>Lesson 8</title>
</properties>
<body>
<intro>
</intro>
<section>
<title>Lesson 8: SchedulerListeners</title>
<br />
<p>
SchedulerListeners are much like ITriggerListeners and IJobListeners, except they receive notification of 
events within the scheduler itself - not necessarily events related to a specific trigger or job.
</p>
<p>
Scheduler-related events include: the addition of a job/trigger, the removal of a job/trigger, a serious error 
within the scheduler, notification of the scheduler being shutdown, and others.
</p>

<strong>The ISchedulerListener Interface</strong>

<pre format="cs">
public interface ISchedulerListener
{
    void JobScheduled(Trigger trigger);

    void JobUnscheduled(string triggerName, string triggerGroup);

    void TriggerFinalized(Trigger trigger);

    void TriggersPaused(string triggerName, string triggerGroup);

    void TriggersResumed(string triggerName, string triggerGroup);

    void JobsPaused(string jobName, string jobGroup);

    void JobsResumed(string jobName, string jobGroup);

    void SchedulerError(string msg, SchedulerException cause);

    void SchedulerShutdown();
} 
</pre>

<p>
ISchedulerListener instances are created and registered in much the same way as the other listener types, 
except there is no distinction between global and non-global listeners. Scheduler listeners can be 
virtually any object that implements the ISchedulerListener interface.
</p>

<p>
<a href="lesson_7.html">&amp;laquo; Lesson 7</a> | <a href="lesson_9.html">Lesson 9 &amp;raquo;</a>  
</p>
</section>
</body>
</document>