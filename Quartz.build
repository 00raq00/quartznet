<project name="Quartz.NET" xmlns="http://nant.sf.net/release/0.85/nant.xsd" default="build">

  <call target="init" />

  <target name="init">

    <!-- what kind of build -->
    <if test="${property::exists('configuration') == false}">
      <property name="configuration" value="Debug" />
    </if>

    <!-- Check target framework -->
    <if test="${property::exists('target.framework') == false}">
      <!-- 2.0 is the default -->
      <property name="target.framework" value="2.0" />
    </if>

    <!-- set global target framework -->
    <property name="nant.settings.currentframework" value="net-${target.framework}" />

    <!-- Set directories -->
    <property name="dir.src" value="src\" />
    <property name="dir.doc" value="doc\" />
    <property name="dir.build" value="build\${target.framework}\${configuration}" />
    <property name="dir.deployment" value="deployment\${target.framework}" />

    <mkdir dir="${dir.build}" />

    <property name="clover.home" value="C:\Program Files\Cenqua\Clover.NET 2.1 for .NET 2.0"/>
    <loadtasks assembly="${clover.home}\CloverNAnt-0.85.dll"/>
  </target>


  <target name="build">
    <property name="defines" value="" overwrite="false" />
    <call target="build-${target.framework}" />
  </target>

  <target name="build-all">
    <property name="defines" value="" overwrite="false" />
    <call target="build-1.1" />
    <call target="build-mono-1.0" />
    <call target="build-2.0" />
    <call target="build-mono-2.0" />
  </target>
  
  <target name="build-1.1" >
    <property name="target.framework" value="1.1" />
    <property name="nant.settings.currentframework" value="net-${target.framework}" />
    <property name="defines" value="${defines}" />
    <call target="build-all-csc" />
  </target>

  <target name="build-2.0">
    <property name="net20" value="true" />
    <property name="defines" value="${defines},NET_20" />

    <property name="target.framework" value="2.0" />
    <property name="nant.settings.currentframework" value="net-${target.framework}" />
    <call target="build-all-csc" />

  </target>


  <target name="build-mono-1.0">
    <property name="net20" value="false" />
    <property name="defines" value="${defines},MONO" />

    <property name="target.framework" value="mono-1.0" />
    <property name="nant.settings.currentframework" value="${target.framework}" />
    <property name="lib-dir-version" value="1.1" />
    <call target="build-all-csc" />

  </target>
  
  <target name="build-mono-2.0">
    <property name="net20" value="true" />
    <property name="defines" value="${defines},NET_20,MONO" />

    <property name="target.framework" value="mono-2.0" />
    <property name="nant.settings.currentframework" value="${target.framework}" />
    <property name="lib-dir-version" value="2.0" />
    <call target="build-all-csc" />

  </target>
  
  <target name="build-quartz" >

    <mkdir dir="build\${target.framework}\${configuration}\Quartz\" />

    <csc
		target="library"
		output="build\${target.framework}\${configuration}\Quartz\Quartz.dll"
		doc="build\${target.framework}\${configuration}\Quartz\Quartz.xml"
		debug="true"
		define="${defines}">
      <nowarn>
        <!-- do not report warnings for missing XML comments -->
        <warning number="0162" />
        <warning number="0168" />
        <!--<warning number="0246" />-->
        <warning number="0618" />
      </nowarn>
      <sources>
        <include name="src/AssemblyInfo.cs" />
        <include name="src/Quartz/**/*.cs" />
        <exclude name="**/JNDIConnectionProvider.cs" />
        <exclude name="**/RemotingInvokerJob.cs" />
      </sources>
      <resources dynamicprefix="false" prefix="Quartz">
        <include name="src/Quartz/quartz.properties" />
      </resources>
      <resources dynamicprefix="false" prefix="Quartz.Impl.AdoJobStore.Common">
        <include name="src/Quartz/Impl/AdoJobStore/Common/dbproviders.properties" />
      </resources>
      <references>
        <include name="System.dll" />
        <include name="System.Configuration.dll" />
        <include name="System.Data.dll" />
        <include name="System.Runtime.Remoting.dll" />
        <include name="System.Web.dll" />
        <include name="lib\${lib-dir-version}\Common.Logging.dll" />
        <include name="lib\1.1\Nullables.dll" unless="${net20}" />
      </references>
    </csc>

    <copy todir="build\${target.framework}\${configuration}\Quartz\" flatten="true" >
      <fileset>
        <include name="lib\${lib-dir-version}\Common.Logging.dll" />
        <include name="lib\1.1\Nullables.dll" unless="${net20}" />
      </fileset>
    </copy>


  </target>

  <target name="build-examples" depends="build-quartz">

    <mkdir dir="build\${target.framework}\${configuration}\Quartz.Examples\" />

    <csc 
      target="exe" 
      output="build\${target.framework}\${configuration}\Quartz.Examples\Quartz.Examples.exe" 
      debug="true" 
      define="${defines}">
      <nowarn>
        <!-- do not report warnings for missing XML comments -->
        <warning number="0162" />
        <warning number="0168" />
        <!--<warning number="0246" />-->
        <warning number="0618" />
      </nowarn>
      <sources>
        <include name="src/AssemblyInfo.cs" />
        <include name="src/Quartz.Examples/**/*.cs" />
      </sources>
      <references>
        <include name="System.dll" />
        <include name="System.Data.dll" />
        <include name="lib\${lib-dir-version}\Common.Logging.dll" />
        <include name="lib\1.1\Nullables.dll" unless="${net20}" />
        <include name="build\${target.framework}\${configuration}\Quartz\Quartz.dll" />
      </references>
    </csc>

    <copy todir="build\${target.framework}\${configuration}\Quartz.Examples\" flatten="true" >
      <fileset>
        <include name="build\${target.framework}\${configuration}\Quartz\Quartz.dll" />
        <include name="lib\${lib-dir-version}\Common.Logging.dll" />
        <include name="lib\1.1\Nullables.dll" unless="${net20}" />
      </fileset>
    </copy>
    <copy file="src\Quartz.Examples\App.config" tofile="build\${target.framework}\${configuration}\Quartz.Examples\Quartz.Examples.exe.config" />
  </target>

  <target name="build-tests">
	<property name="test.project" value="Integration" />
	<call target="build-tests-internal" />
	<property name="test.project" value="Unit" />
	<call target="build-tests-internal" />
  </target>
  
  <target name="build-tests-internal" depends="build-quartz">

    <mkdir dir="build\${target.framework}\${configuration}\Quartz.Tests.${test.project}\" />

    <csc target="library" output="build\${target.framework}\${configuration}\Quartz.Tests.${test.project}\Quartz.Tests.${test.project}.dll" debug="true" define="${defines}">
      <nowarn>
        <!-- do not report warnings for missing XML comments -->
        <warning number="0162" />
        <warning number="0168" />
        <!--<warning number="0246" />-->
        <warning number="0618" />
      </nowarn>
      <sources>
        <include name="src/AssemblyInfo.cs" />
        <include name="src/Quartz.Tests.${test.project}/**/*.cs" />
      </sources>
      <references>
        <include name="System.dll" />
        <include name="System.Data.dll" />
        <include name="lib\${lib-dir-version}\Common.Logging.dll" />
        <include name="lib\${lib-dir-version}\nunit.framework.dll" />
        <include name="lib\1.1\Nullables.dll" unless="${net20}" />
        <include name="build\${target.framework}\${configuration}\Quartz\Quartz.dll" />
		<include name="lib\${lib-dir-version}\Rhino.Mocks.dll"  />
      </references>
    </csc>

    <copy todir="build\${target.framework}\${configuration}\Quartz.Tests.${test.project}\" flatten="true" >
      <fileset>
        <include name="build\${target.framework}\${configuration}\Quartz\Quartz.dll" />
        <include name="lib\${lib-dir-version}\Common.Logging.dll" />
        <include name="lib\1.1\Nullables.dll" unless="${net20}" />
		<include name="lib\${lib-dir-version}\nunit.framework.dll"  />
		<include name="lib\${lib-dir-version}\Rhino.Mocks.dll"  />
      </fileset>
    </copy>

  </target>

  <target name="unit-2.0" depends="build-2.0">
    <call target="unit" />
  </target>

  <target name="unit-1.1" depends="build-1.1">
    <call target="unit" />
  </target>



  <target name="unit" depends="build">
    <property name="test.dll" value="build\${target.framework}\${configuration}\Quartz.Tests.Unit\Quartz.Tests.Unit.dll" />
    <echo message="Testing dll: ${test.dll}"  />
    <nunit2 verbose="true" failonerror="false">
      <formatter type="Plain" />
      <test assemblyname="${test.dll}" />
    </nunit2>
  </target>


  <target name="clean">
    <echo message="Cleaning old compiled dlls..." />
    <delete failonerror="false" dir="./build" />
    <delete failonerror="false" dir="./CloverBuild" />
    <delete failonerror="false" dir="./CloverReport" />
    <delete failonerror="false" dir="./package" />
    <delete failonerror="false" file="./Quartz-x.x.zip" />
    <echo message="Cleaning old temporary build files (obj and bin dirs)..." />
    <delete>
      <fileset>
        <include name="${dir.src}\**\obj\**" />
        <include name="${dir.src}\**\bin\**" />
      </fileset>
    </delete>
  </target>

  <target name="with-clover">
    <clover-setup initstring="CloverBuild\clover.cdb"
      builddir="CloverBuild"
      flushinterval="5000"
      flatten="true">
      <fileset basedir="src">
        <include name="**/*"/>
        <exclude name="**/Quartz.Tests/**/*"/>
        <exclude name="**/Quartz.Examples/**/*"/>
      </fileset>
    </clover-setup>
  </target>

  <target name="clover-report" depends="with-clover">

    <clover-report>
      <current title="Quartz.NET Clover Report" output="CloverReport">
        <format type="html" orderby="Alpha" />
      </current>
    </clover-report>

  </target>

  <target name="clover" depends="with-clover, unit-2.0, clover-report">

  </target>

  <target name="doc" depends="build">

    <mkdir dir="doc\apidoc" />

    <property name="dir.ndoc.target.binaries" value="${dir.build}\Quartz\" />
    <echo message="Building documentation using binaries found from ${dir.ndoc.target.binaries}" />

    <ndoc>
      <assemblies basedir="${dir.ndoc.target.binaries}">
        <include name="Quartz.dll" />
      </assemblies>

      <summaries basedir="${dir.src}\">
        <include name="NamespaceSummary.xml" />
      </summaries>
      <documenters>
        <documenter name="MSDN">
          <property name="OutputDirectory" value="doc\apidoc" />
          <property name="HtmlHelpName" value="Quartz.NET" />
          <property name="HtmlHelpCompilerFilename" value="hhc.exe" />
          <property name="IncludeFavorites" value="False" />
          <property name="Title" value="Quartz.NET Class Library" />
          <property name="SplitTOCs" value="False" />
          <property name="DefaulTOC" value="" />
          <property name="ShowVisualBasic" value="False" />
          <property name="ShowMissingSummaries" value="False" />
          <property name="ShowMissingRemarks" value="False" />
          <property name="ShowMissingParams" value="False" />
          <property name="ShowMissingReturns" value="False" />
          <property name="ShowMissingValues" value="False" />
          <property name="DocumentInternals" value="False" />
          <property name="DocumentProtected" value="True" />
          <property name="DocumentPrivates" value="False" />
          <property name="DocumentEmptyNamespaces" value="False" />
          <property name="IncludeAssemblyVersion" value="True" />
          <property name="CopyrightText" value="Copyright OpenSymphony 2006-2007" />
          <property name="CopyrightHref" value="" />
        </documenter>
      </documenters>
    </ndoc>
    <!-- clean unwanted items -->
    <delete>
      <fileset>
        <include name="doc\apidoc\**\ndoc_msdn_temp" />
        <include name="doc\apidoc\**\*.chm" />
        <include name="doc\apidoc\**\*.hhc" />
        <include name="doc\apidoc\**\*.hhk" />
        <include name="doc\apidoc\**\*.hhp" />
      </fileset>
    </delete>
  </target>

  <target name="package-release">

    <!-- <property name="configuration" value="Release" /> -->
    <call target="init" />
    
    <property name="defines" value="STRONG" />

    <!-- <call target="clean" /> -->
    <call target="build-1.1" />
    <call target="build-2.0" />
    <!-- <call target="doc" /> -->

   
    <delete dir="package" failonerror="false" />
    <mkdir dir="package" />
    <!-- <mkdir dir="package\bin" /> -->
    <mkdir dir="package\doc" />
    <mkdir dir="package\database" />
    <mkdir dir="package\src" />

    <copy todir="package">
      <fileset>
        <include name="${dir.src}\**" />
        <include name="build\**\Quartz\**" />
        <include name="${dir.doc}\apidoc\**" />
        <include name="database\**" />
        <include name="lib\**" />
        <include name="*.sln" />
        <include name="*.txt" />
        <include name="*.build" />

        <exclude name="lib/other" />
        <exclude name="**/.svn/**" />
        <exclude name="**/_svn/**" />
        <exclude name="**/*.suo" />
        <exclude name="**/*.user" />
        <exclude name="**/*.pdb" />
      </fileset>
    </copy>

    <!-- sorry *nix folks, couldn't get move to work as expected.. -->
    <exec program="cmd" commandline="/c move package\build package\bin" />

    <zip zipfile="Quartz.NET-x.x.zip">
      <fileset basedir="package">
        <include name="**/*" />
      </fileset>
    </zip>

  </target>
  
  <target name="build-all-csc">
    <property name="defines" value="" overwrite="false" />
    <property name="net20" value="false" overwrite="false" />
    <property name="lib-dir-version" value="${target.framework}" overwrite="false" />

    <call target="build-quartz" />
    <call target="build-examples" />
    <call target="build-tests" />

  </target>

  <target name="build-website">

    <loadtasks assembly="lib\other\Anakia.dll" verbose="true" />

    <mkdir dir="website" failonerror="false" />
    
    <anakia
            navigationfile="doc\website\navigation.xml"
            templatefile="doc\website\site.vsl"
            projectfile="doc\website\project.xml"
            targetdir="website\"
            >
            
            <source basedir="doc\website">
                <include name="**.*" />
                
                <exclude name="**/project.xml" />
                <exclude name="**/*.vsl" />
                <exclude name="**/*.dtd" />
            </source>
        </anakia>
    </target>
  
</project>